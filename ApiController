using Datalus.Web.Domain;
using Datalus.Web.Models.Requests;
using Datalus.Web.Models.Requests.Tests;
using Datalus.Web.Models.Responses;
using Datalus.Web.Services;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Web.Http;

namespace Datalus.Web.Controllers.Api
{
    [RoutePrefix("api/educations")]
    public class EducationsApiController: ApiController
    {
        [Route, HttpPost]
        public HttpResponseMessage Add(EducationsAddRequest model)
        {
            try
            {
                if (!IsModelValid(model))
                {
                    return GetInvalidResponse(model);
                }

                ItemResponse<int> response = new ItemResponse<int>();
                response.Item = EducationsService.AddEducations(model);
                return Request.CreateResponse(HttpStatusCode.OK, response);
            }
            catch (Exception ex)
            {
                return GetErrorResponse(ex);
            }
        }

        [Route("{id:int}"), HttpPut]
        public HttpResponseMessage Update(EducationsUpdateRequest model, int id)
        {
            if (ModelState.IsValid)
            {
                EducationsService.UpdateEducations(model);
                SuccessResponse response = new SuccessResponse();
                return Request.CreateResponse(response);
            }
            else
            {
                return Request.CreateResponse(HttpStatusCode.BadRequest, ModelState);
            }
        }

        [Route("{id:int}"), HttpGet]
        public HttpResponseMessage SelectByIdEducations(int id)
        {
            if (!ModelState.IsValid)
            {
                return Request.CreateErrorResponse(HttpStatusCode.BadRequest, ModelState);
            }
            Educations e = EducationsService.GetEducation(id);

            ItemResponse<Educations> response = new ItemResponse<Educations>();
            response.Item = e;
            return Request.CreateResponse(response);
        }

        [Route, HttpGet]
        public HttpResponseMessage GetAllEducations()
        {
            ItemsResponse<Educations> response = new ItemsResponse<Educations>();
            response.Items = EducationsService.GetAllEducations();
            return Request.CreateResponse(response);
        }


        [Route("{id:int}"), HttpDelete]
        public HttpResponseMessage DeleteEducations(int id)
        {
            EducationsService.DeleteEducations(id);
            SuccessResponse response = new SuccessResponse();
            return Request.CreateResponse(response);
        }


    }
}
